{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","BASE_URL","request","url","fetch","then","response","json","getPhones","phoneDetails","id","getAllSuccessfulDetails","phones","Promise","createBlock","map","phone","toUpperCase","name","race","getFirstReceivedDetails","text","className","arrWithNamesAndIds","block","createElement","description","ul","classList","add","innerText","forEach","el","li","append"],"mappings":";AAAA,aAIA,IAAMA,EAAOC,SAASC,cAAc,QAE9BC,EAAW,4DAEjB,SAASC,EAAQC,GACRC,OAAAA,MAASH,GAAAA,OAAAA,GAAWE,OAAAA,IACxBE,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAG/B,IAAMC,EAAY,WAAMN,OAAAA,EAAQ,iBAC1BO,EAAe,SAACC,GAAOR,OAAAA,EAAmBQ,WAAAA,OAAAA,EAA3B,WAMrB,SAASC,EAAwBC,GASxBC,OAFPC,EAAY,iBAAkB,iBANRF,EAAOG,IAAI,SAAAC,GAGrBA,OAFVP,EAAaO,EAAMN,IAETM,GAAAA,OAAAA,EAAMN,GAAGO,cAAqBD,SAAAA,OAAAA,EAAME,SAKzCL,QAAQM,KAAKP,GAGtB,SAASQ,EAAwBJ,GAG/BF,EAAY,iBAAkB,iBAFR,CAAIE,GAAAA,OAAAA,EAAMN,GAAGO,cAAqBD,SAAAA,OAAAA,EAAME,QAKhE,SAASJ,EAAYO,EAAMC,EAAWC,GAC9BC,IAAAA,EAAQzB,SAAS0B,cAAc,OAC/BC,EAAc3B,SAAS0B,cAAc,MACrCE,EAAK5B,SAAS0B,cAAc,MAElCD,EAAMI,UAAUC,IAAIP,GACpBI,EAAYI,UAAYT,EAExBE,EAAmBQ,QAAQ,SAAAC,GACnBC,IAAAA,EAAKlC,SAAS0B,cAAc,MAElCQ,EAAGH,UAAYE,EAEfL,EAAGO,OAAOD,KAGZT,EAAMU,OAAOR,EAAaC,GAC1B7B,EAAKoC,OAAOV,GAvCdhB,IACGH,KAAKM,GACLN,KAAKe","file":"main.6d75f60f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\n\nconst body = document.querySelector('body');\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nfunction request(url) {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n}\n\nconst getPhones = () => request('/phones.json');\nconst phoneDetails = (id) => request(`/phones/${id}.json`);\n\ngetPhones()\n  .then(getAllSuccessfulDetails)\n  .then(getFirstReceivedDetails);\n\nfunction getAllSuccessfulDetails(phones) {\n  const arrNameAndIds = phones.map(phone => {\n    phoneDetails(phone.id);\n\n    return `${phone.id.toUpperCase()} --- ${phone.name}`;\n  });\n\n  createBlock('All Successful', 'all-successful', arrNameAndIds);\n\n  return Promise.race(phones);\n}\n\nfunction getFirstReceivedDetails(phone) {\n  const fastesPromise = [`${phone.id.toUpperCase()} --- ${phone.name}`];\n\n  createBlock('First Received', 'first-received', fastesPromise);\n}\n\nfunction createBlock(text, className, arrWithNamesAndIds) {\n  const block = document.createElement('div');\n  const description = document.createElement('h3');\n  const ul = document.createElement('ul');\n\n  block.classList.add(className);\n  description.innerText = text;\n\n  arrWithNamesAndIds.forEach(el => {\n    const li = document.createElement('li');\n\n    li.innerText = el;\n\n    ul.append(li);\n  });\n\n  block.append(description, ul);\n  body.append(block);\n}\n"]}